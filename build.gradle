plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + project.minecraft_version
group = project.maven_group

configurations {
    includeClasspath
}

repositories {
    maven {
        url 'https://maven.terraformersmc.com/'
    }
    maven {
        url 'https://maven.shedaniel.me/'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modApi include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_api_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    implementation "com.moandjiezana.toml:toml4j:${project.toml4j_version}"
    includeClasspath("com.moandjiezana.toml:toml4j:${project.toml4j_version}") {
        exclude(group: "com.google.code.gson")
    }
    modImplementation include(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
    modImplementation fabricApi.module("fabric-screen-api-v1", project.fabric_version)
    modImplementation include(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version))
    modImplementation fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version)
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    from "LICENSE"
    from {
        configurations.includeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}